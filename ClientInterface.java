
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.regex.Pattern;

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Allan J. Fret
 */
public class ClientInterface extends javax.swing.JFrame {

	/**
	 * Creates new form ClientInterface
	 */
	public ClientInterface() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		clearButton = new javax.swing.JButton();
		submitButton = new javax.swing.JButton();
		hostTextField = new javax.swing.JTextField();
		portTextField = new javax.swing.JTextField();
		queryPathTextField = new javax.swing.JTextField();
		thresholdTextField = new javax.swing.JTextField();
		serverMessageTextField = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Similar Documents Calculator");

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		jLabel1.setText("Host");

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		jLabel2.setText("Port");

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		jLabel3.setText("Query Path");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		jLabel4.setText("Threshold");

		clearButton.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		clearButton.setText("Clear");
		clearButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearButtonActionPerformed(evt);
			}
		});

		submitButton.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		submitButton.setText("Submit Query");
		submitButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					submitButtonActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		serverMessageTextField.setEditable(false);

		jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
		jLabel5.setText("Server Message");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(12, 12, 12)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(queryPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(serverMessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(layout.createSequentialGroup()
										.addComponent(clearButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(submitButton)
										.addGap(21, 21, 21)))
						.addContainerGap(28, Short.MAX_VALUE))
				);

		layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hostTextField, portTextField, queryPathTextField, thresholdTextField});

		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1)
								.addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel3)
								.addComponent(queryPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(21, 21, 21)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4)
								.addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(clearButton)
								.addComponent(submitButton))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5)
								.addComponent(serverMessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(27, Short.MAX_VALUE))
				);

		pack();
	}// </editor-fold>                        

	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
		hostTextField.setText("");
		serverMessageTextField.setText("");
		portTextField.setText("");
		thresholdTextField.setText("");
	}                                           

	private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                             

		if(isValidData()){
			// Creating socket to connect with the server
			Socket socket = new Socket("localhost", 3333);
			DataOutputStream outputStream = new DataOutputStream(socket.getOutputStream());

			// Getting the host
			String host = hostTextField.getText();
			// getting the port number
			int port = Integer.parseInt(portTextField.getText());
			// getting the document path
			String queryPath = queryPathTextField.getText();
			// getting the threshold
			Double threshold = Double.parseDouble(thresholdTextField.getText());

			// sending the data to the server
			outputStream.writeUTF(host);
			outputStream.writeInt(port);
			outputStream.writeUTF(queryPath);
			outputStream.writeDouble(threshold);
			outputStream.flush();

			outputStream.close();
			socket.close();
		}

	}       

	/*******************************************
	 *			 WORKING ON IT
	 *******************************************/

	private boolean isValidData(){
		return !isPresent() && isNumeric() && isFloat();
	}
	
private boolean isNumeric() {
		String regex = "[0-9]+";
		Pattern pattern = Pattern.compile(regex);
		if(pattern.matcher(portTextField.getText()).matches())
			return true;
		JOptionPane.showMessageDialog(null, "Error, invalid data. " +
				"The port must be an integer value");
		return false;
	}

	private boolean isPresent(){
		if (queryPathTextField.getText().isEmpty() ||
				hostTextField.getText().isEmpty()){
			JOptionPane.showMessageDialog(null, "Error, invalid data. " +
					"The host and the query path must have a value");
			return true;
		}
		return false;
	}

	private boolean isFloat() {
		String regex = "[0-9]\\.[0-9]+";
		Pattern pattern = Pattern.compile(regex);
		if(pattern.matcher(thresholdTextField.getText()).matches()){
			Double threshold = Double.parseDouble(thresholdTextField.getText());
			if(threshold >= 0 && threshold <= 1)
				return true;
		}
		JOptionPane.showMessageDialog(null, "Error, invalid data. " +
				"The threshold, must be beetween 0 and 1");
		return false;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ClientInterface().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify                     
	private javax.swing.JButton clearButton;
	private javax.swing.JTextField hostTextField;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JTextField portTextField;
	private javax.swing.JTextField queryPathTextField;
	private javax.swing.JTextField serverMessageTextField;
	private javax.swing.JButton submitButton;
	private javax.swing.JTextField thresholdTextField;
	// End of variables declaration                   
}
